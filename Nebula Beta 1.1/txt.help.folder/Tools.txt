# Tools.txt — Inventaire des outils inclus dans Nebula Terminal
# Spécifique au projet "Nebula" (fichiers main.py / launch.py)
# Dernière mise à jour : 2025-10-13

###############################################################################
# 1) OUTILS / MODULES INTERNES (package Tools / ToolsFunction / NebulaGui)
###############################################################################

Tools.shadowviper — Module interne / outil « shadowviper »
  - Description : outil personnalisé inclus dans le package Tools. Probablement utilitaire de reconnaissance ou collection d'outils spécifiques à Nebula.
  - Plateforme : Cross-platform (via Python).
  - Note : fichier local — vérifier s'il nécessite privilèges root (sniffing, raw sockets). Masque/valide les entrées sensibles avant logging.

Tools.dirb — Wrapper local pour brute-forcing de répertoires
  - Description : module interne qui expose une fonction `dirb` utilisée depuis le menu. Peut encapsuler wordlists, scans web.
  - Plateforme : Cross-platform (Python).
  - Note : usage potentiellement bruyant — protéger par SAFE_MODE et confirmer scope avant exécution.

Tools.games.nebulers.Menu_Principale — Mini-jeux intégrés à Nebula
  - Description : module de jeux (nebulers) embarqué pour fun / démonstration UI.
  - Plateforme : Cross-platform.
  - Note : n'affecte pas la pentest, mais utile pour démo / tests UI.

Tools.ping.ping.run_ping_command — Wrapper ping
  - Description : wrapper interne pour exécuter pings (ICMP) et parser résultats.
  - Plateforme : Cross-platform (ICMP nécessite privilèges sur certains OS).
  - Note : sur Linux/Windows, l’usage d’ICMP peut nécessiter privilèges ; prévoir fallback (TCP ping) si pas autorisé.

Tools.nexariescan.run_scan — Scanner interne « nexariescan »
  - Description : scanner personnalisé intégré dans Nebula pour reconnaissance / scan de services.
  - Plateforme : Cross-platform.
  - Note : vérifier limites de rate/threads et activer SAFE_MODE par défaut.

Tools.blacknova.blacknova — Module d’action avancée (nom suggestif)
  - Description : fonctionnalité interne (probablement brute/attaque/outil spécialisé). Nom indique action puissante.
  - Plateforme : Cross-platform.
  - Note de sécurité : doit être verrouillé par défaut. Requiert flag explicite pour activation (ex : NEBULA_ALLOW_DANGEROUS=1 + consentement).

ToolsFunction.netstorm — Fonction utilitaire « netstorm »
  - Description : utilitaire réseau intégré — nom évocateur d’activité importante sur le réseau (tests de charge, etc).
  - Plateforme : Cross-platform.
  - Note : dangereux en environnement non contrôlé — toujours désactivé en SAFE_MODE et nécessite confirmation explicite.

NebulaGui.Gui — Interface graphique Nebula
  - Description : module GUI du projet (fenêtres, menus). Implique tkinter / affichage HTML selon implémentation.
  - Plateforme : Linux (X), Windows (Win32), mac (requiert Tk).
  - Note : prévoir mode `--headless` pour environnements sans display (serveurs/Kali headless). Ne pas lancer automatiquement si DISPLAY absent.

###############################################################################
# 2) BIBLIOTHÈQUES / DÉPENDANCES TIERS UTILISÉES PAR NEBULA
###############################################################################

colorama — Coloration des sorties terminal (Windows friendly)
  - Usage dans Nebula : styliser les messages console.
  - Plateforme : Cross-platform.
  - Note : sur Windows initialise `colorama.init()`; remplace `os.system("color")`.

pyfiglet — Affichage ASCII-art (bannières)
  - Usage : titres / bannière Nebula.
  - Plateforme : Cross-platform.

requests — Requêtes HTTP simples
  - Usage : appels web / APIs.
  - Plateforme : Cross-platform.
  - Note : gérer timeouts, retries, et erreurs réseau.

folium — Génération de cartes HTML
  - Usage : fonctionnalités de mapping / geo (sauvegarde HTML).
  - Plateforme : Cross-platform.
  - Note : ne pas tenter d'ouvrir automatiquement le HTML sur un serveur headless.

keyboard — Lecture d'événements clavier globaux
  - Usage : détection de touches (ex : quitter, shortcuts).
  - Plateforme : Windows (bon support), Linux (nécessite sudo ou capacités), mac (limités).
  - Note de sécurité : nécessite précautions — documenter installation & privilèges (Kali).

psutil — Infos système (process, CPU, mémoire)
  - Usage : monitoring, kill processes, info système.
  - Plateforme : Cross-platform.

tkinter — GUI natif Python (Tk)
  - Usage : fenêtres/dialogs (si GUI activée).
  - Plateforme : Windows, Linux (X), mac.
  - Note : paquet souvent absent sur images minimalistes (installer python3-tk).

pyinstaller — (optionnel) pour créer exécutable Windows
  - Usage : packaging pour distribuer Nebula en .exe.
  - Plateforme : Windows (build), Linux.

json, os, subprocess, socket, platform, getpass, shutil, time, random, math, traceback, unicodedata, ctypes, threading — libs stdlib
  - Usage : utilitaires core du projet (IO, exécution sous-process, manipulation strings, threads).

###############################################################################
# 3) RECOMMANDATIONS / PRÉREQUIS POUR CHAQUE PLATEFORME
###############################################################################

- Windows 10/11 :
  - Installer Python3 (≥3.8), activer "Add to PATH".
  - Préférer lancer Nebula via le venv créé par launch.py (venv/Scripts/python.exe).
  - `keyboard` fonctionne mieux avec droits admin ; testing recommandé dans PowerShell (Admin).
  - Si packaging, construire avec PyInstaller sur une VM Windows.

- Linux / Kali :
  - Installer python3-venv, python3-tk (si GUI), build-essential si besoin.
  - `keyboard` peut nécessiter `sudo` ou `setcap` pour capter certaines touches globales. Documente les besoins.
  - Sur serveurs/headless, utiliser `--headless` pour désactiver tkinter/folium open.
  - Certains outils réseau (raw sockets) nécessitent droits root (sudo).

- Général :
  - Toujours lancer `launch.py` pour créer venv et installer `requirements.txt`.
  - SAFE_MODE activé par défaut : fonctionnalités destructrices sont désactivées jusqu'à activation explicite via variable d'environnement ou option CLI.
  - Documente dans README les modules nécessitant privilèges (keyboard, raw sockets, sniffers).

